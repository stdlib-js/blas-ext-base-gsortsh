// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./mod.d.ts" />
var r="function"==typeof Object.defineProperty?Object.defineProperty:null;var e=function(){try{return r({},"x",{}),!0}catch(r){return!1}},t=Object.defineProperty,n=Object.prototype,o=n.toString,a=n.__defineGetter__,u=n.__defineSetter__,i=n.__lookupGetter__,l=n.__lookupSetter__;var c=t,f=function(r,e,t){var c,f,_,p;if("object"!=typeof r||null===r||"[object Array]"===o.call(r))throw new TypeError("invalid argument. First argument must be an object. Value: `"+r+"`.");if("object"!=typeof t||null===t||"[object Array]"===o.call(t))throw new TypeError("invalid argument. Property descriptor must be an object. Value: `"+t+"`.");if((f="value"in t)&&(i.call(r,e)||l.call(r,e)?(c=r.__proto__,r.__proto__=n,delete r[e],r[e]=t.value,r.__proto__=c):r[e]=t.value),_="get"in t,p="set"in t,f&&(_||p))throw new Error("invalid argument. Cannot specify one or more accessors and a value or writable attribute in the property descriptor.");return _&&a&&a.call(r,e,t.get),p&&u&&u.call(r,e,t.set),r},_=e()?c:f;var p=function(r,e,t){_(r,e,{configurable:!1,enumerable:!1,writable:!1,value:t})},v=Number.NEGATIVE_INFINITY;var b=function(r){return 0===r&&1/r===v};var y=function(r){return r!=r},d=[701,301,132,57,23,10,4,1],s=b,g=y,j=d,m=j.length;var w=b,h=y,E=d,I=E.length;var N=function(r,e,t,n){var o,a,u,i,l,c,f,_;if(r<=0||0===e)return t;for(e<0&&(n*=-1),o=n<0?(1-r)*n:0,c=0;c<m;c++)for(f=u=j[c];f<r;f++)if(i=t[o+f*n],!g(i)){for(a=s(i),_=f;_>=u&&(!((l=t[o+(_-u)*n])<=i)||a&&l===i);_-=u)t[o+_*n]=l;t[o+_*n]=i}return t},O=function(r,e,t,n,o){var a,u,i,l,c,f,_;if(r<=0||0===e)return t;for(e<0&&(o-=(r-1)*(n*=-1)),c=0;c<I;c++)for(f=u=E[c];f<r;f++)if(i=t[o+f*n],!h(i)){for(a=w(i),_=f;_>=u&&(!((l=t[o+(_-u)*n])<=i)||a&&l===i);_-=u)t[o+_*n]=l;t[o+_*n]=i}return t};p(N,"ndarray",O);var P=N;export{P as default,O as ndarray};
//# sourceMappingURL=mod.js.map
